import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Providers from "@/components/_shared/Providers";
import { CopilotKit } from "@copilotkit/react-core";
import "./globals.css";
import "@copilotkit/react-ui/styles.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const agentService = process.env.AGENT_SERVICE?.toLowerCase();
  const agentName = process.env.AGENT_NAME;
  
  return (
    <html lang="ko" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        suppressHydrationWarning
      >
        <Providers>
          <CopilotKit 
            runtimeUrl="/api/copilotkit"
            {...(agentService === "langgraph" && agentName && { agent: agentName })}
          >
            {children}
          </CopilotKit>
        </Providers>
      </body>
    </html>
  );
}
